global args = [];
global filesystem = table {
    "home" = table  {};
    "bin" = table  {
        "gcsh" = builtin_file("gcsh.gc");
        "bash" = builtin_file("bash.gc");
        "fish" = builtin_file("bash.gc");
        "zsh" = builtin_file("bash.gc");
        "sh" = builtin_file("bash.gc");
    };
};

fn get_root_path(relative_path: String) {
    if relative_path[0] == "." {
        relative_path[0] = gcsh_working_directory;
    } else if relative_path[0] == "~" {
        relative_path[0] = gcsh_home_directory;
    }
    return relative_path;
}

fn read_file(path: String) {
    if path[0] == "." {
        path[0] = gcsh_working_directory;
    } else if path[0] == "~" {
        path[0] = gcsh_home_directory;
    }
    let path = filesystem;
}

global gcsh_state = "Run";
global gcsh_command = "";
global gcsh_home_directory = "/home";
global gcsh_working_directory = gcsh_home_directory;

fn execute() {
    let args = [];

    {
        let token = "";
        for(gcsh_command, fn (char: String) {
            // TODO: String literals
            if char == " " {
                args = args + [token];
                token = "";
            } else {
                token = token + char;
            }
        });
        args = args + [token];
    }

    gcsh_state = "Run";
    let bin = filesystem["bin"];
    if contains(bin, args[0]) {
        eval(bin[args[0]]);
    } else {
        println("Command '" + args[0] + "' not found!");
    }
}

if len(args) > 1 {
    args = remove(args, 0);
    let home = filesystem["home"];
    gcsh_command = args[0];
    execute();
}

let input = input();
if gcsh_state == "Run" {
    print("/home\n> ");
    gcsh_state = "Prompt";
    gcsh_command = "";
} else if gcsh_state == "Prompt" {
    if len(input) > 0 {
        if contains(input, "\x08") {
            if len(gcsh_command) > 0 {
                screen_buffer = pop(screen_buffer);
                gcsh_command = pop(gcsh_command);
            }
        } else if contains(input, "\n") {
            println();
            println(get_root_path("~/Test"));
            // execute();
        } else {
            gcsh_command = gcsh_command + input;
            print(input);
        }
    }
}

